#!/usr/bin/env python3
import math

# Configuration for 24 ropes sine wave animation
NUM_ROPES = 24
FRAMES = 256  # Number of animation frames
MIN_Y = 50    # Minimum Y position (top of screen area)
MAX_Y = 230   # Maximum Y position (bottom of screen area)
AMPLITUDE = (MAX_Y - MIN_Y) // 2
CENTER_Y = MIN_Y + AMPLITUDE

def generate_sine_data():
    """Generate sine wave Y-position data for 24 ropes"""
    
    with open('rope-sine-data.i', 'w') as fh:
        fh.write('; Sine wave data for 24 ropes\n')
        fh.write('; Generated by gen-rope-sine.py\n\n')
        
        # Generate data for each frame
        for frame in range(FRAMES):
            fh.write(f'; Frame {frame}\n')
            fh.write('!byte ')
            
            y_positions = []
            for rope in range(NUM_ROPES):
                # Calculate phase offset for each rope to create wave effect
                # Each rope is offset by 1/24th of a full cycle
                phase = (frame + rope * (FRAMES // NUM_ROPES)) * (2 * math.pi / FRAMES)
                # Calculate Y position using sine wave
                y = int(CENTER_Y + AMPLITUDE * math.sin(phase))
                # Clamp to valid range
                y = max(MIN_Y, min(MAX_Y, y))
                y_positions.append(y)
                
            # Write Y positions for this frame
            fh.write(','.join(f'${y:02x}' for y in y_positions))
            fh.write('\n')

if __name__ == '__main__':
    generate_sine_data()
    print(f'Generated sine wave data for {NUM_ROPES} ropes with {FRAMES} frames')
